---
import Header from '../components/Header.astro'
import Footer from '../components/Footer/Footer.astro'
export interface Props {
	title: string;
}

const { title } = Astro.props;

---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="stylesheet" href="./node_modules/lineicons/web-font/lineicons.css" />
	</head>
	<body>
		<Header />
		<main>
			<slot />
		</main>
		<Footer />
	</body>
</html>
<style is:global>

	@keyframes fadeUp {
		from {
			opacity: 0;
			transform: translateY(3%);
		}
		to {
			opacity: 1;
			transform: translateY(0%);
		}
	}	
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #1a1a1a !important;
		transition: all 0.3s ease-in-out;
	}
/* 
	html[data-theme="dark"] {
		background-color: #1a1a1a !important;
	}

	html[data-theme="light"] {
		background-color: #f9f9f9 !important;
	}

	html[dark-theme="light"] body {
		background-color: #f9f9f9 !important;
		color: #2a2a2a !important;
	} */
	body {
		margin: 0;
		padding: 0;
		font-family: "Poppins", sans-serif;
		transition: all 0.3s ease-in-out;
	}
/* 
	html[data-theme="dark"] body {
		background-color: #1a1a1a !important;
		color: #f9f9f9 !important;
	}

	html[data-theme="light"] body {
		background-color: #f9f9f9 !important;
		color: #2a2a2a !important;
	} */

	main {
		margin: 150px auto;
		transition: all 0.3s ease-in-out;
	}

	img {
		height: auto;
	}

	a {
		color: dodgerblue;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
	h1 {
		font-size: 3rem;
	}
	h2 {
		font-size: 3rem;
	}

	h3 {
		font-size: 1.5rem;
	}

	p {
		font-size: 1.125rem;
		margin-block: 10px 10px;
	}

	a {
		text-decoration: none;
		color: #4d795e;
		font-weight: 600;
	}

	a strong {
		color: #f9f9f9;
	}
	.text-center {
		text-align: center;
	}
	.btn {
		padding-inline: 20px;
		padding-block: 10px;
		border-radius: 5px;
		border: 2px solid #2a2a2a;
		border-color: #2bb5c2;
		transition: all 0.3s ease-in-out;
	}

	.btn.btn-dark {
		border-color: #3e7a5c;
		color: #f9f9f9;
	}

	.btn.btn-dark:hover {
		background: #3e7a5c;
		color: #f9f9f9;
	}

	.btn.btn-light {
		border-color: #f9f9f9;
		color: #f9f9f9;
	}

	.btn:hover {
		background: #2a2a2a;
		color: #f9f9f9;
	}

	/* html[data-theme="light"] .btn {
		border-color: #3e7a5c;
		color: #2a2a2a;
	} */

	.animate-fadeUp {
		opacity: 0;
		animation: fadeUp 1s forwards;
	}

	.animate-delay-half {
		animation-delay: 0.5s;
	}

	.animate-delay-full {
		animation-delay: 1s;
	}

	@media (max-width: 575px) {
		main, section {
			max-width: 100%;
		}
	}

	@media (min-width: 576px) and (max-width: 767px) {
		main, section {
			max-width: 540px;
		}
	}
	@media (min-width: 768px) and (max-width: 991px) {
		main, section {
			max-width: 720px;
		}
	}
	}
	@media (min-width: 992px) and (max-width: 1023px) {
		main, section {
			max-width: 768px;
		}
	}
	@media (min-width: 1024px) and (max-width: 1199px) {
		main,section {
			max-width: 992px;
		}
	}

	@media (min-width: 1200px) {
		main, section {
			max-width: 1140px;
		}
	}

	@media (max-width: 1139px) {
		main, section {
			max-width: 100%;
		}
	}

	/**
		darkmode	
	*/
	@media (prefers-color-scheme: light) {
		html, body, main {
			background-color: #f9f9f9 !important;
			color: #2a2a2a !important;
		}

		a.btn-dark {
			color: #4d795e !important;
		}

		a.btn-dark:hover {
			color: #f9f9f9 !important;
		}
	}

	@media (prefers-color-scheme: dark) {
		html, body, main {
			background: #1a1a1a !important;
			color: #f9f9f9 !important;
		}

		a.btn-dark {
			color: #4d795e !important;
		}

		a.btn-dark:hover {
			color: #f9f9f9 !important;
		}
	}
</style>

<script>
const theme = window.localStorage.getItem('theme');

if (theme === 'dark') {
	document.documentElement.setAttribute('data-theme', 'dark');
} else {
	document.documentElement.setAttribute('data-theme', 'light');
}
</script>